{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "LastLogRecived_Notification",
            "type":  "string"
        },
        "MailList":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for MailList"
            }
        },
        "ResourceGroupName":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for ResourceGroupName"
            }
        },
        "SubscriptionID":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for SubscriptionID"
            }
        },
        "WorkspaceName":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for WorkspaceName"
            }
        }
    },
    "variables":  {
        "AzuremonitorlogsConnectionName":  "[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
        "Office365ConnectionName":  "[concat('Office365-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "MailList":  {
                            "defaultValue":  "[parameters('MailList')]",
                            "type":  "string"
                        },
                        "ResourceGroupName":  {
                            "defaultValue":  "[parameters('ResourceGroupName')]",
                            "type":  "string"
                        },
                        "SubscriptionID":  {
                            "defaultValue":  "[parameters('SubscriptionID')]",
                            "type":  "string"
                        },
                        "WorkspaceName":  {
                            "defaultValue":  "[parameters('WorkspaceName')]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "Recurrence":  {
                            "recurrence":  {
                                "frequency":  "Hour",
                                "interval":  48
                            },
                            "evaluatedRecurrence":  {
                                "frequency":  "Hour",
                                "interval":  48
                            },
                            "type":  "Recurrence"
                        }
                    },
                    "actions":  {
                        "Heartbeat_Query":  {
                            "runAfter":  {
                                "Last_data_received,_by_table":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "let Threshold= @{variables('HeartbeatThreshold')}m;\nHeartbeat\n| summarize LastHeartbeat = max(TimeGenerated) by Computer\n| extend TimeFromNow = now() - LastHeartbeat\n| where TimeFromNow \u003e Threshold\n| extend [\"TimeAgo\"] = strcat(case(TimeFromNow \u003c 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow \u003c 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow \u003c 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\n| order by TimeFromNow desc\n| project-away LastHeartbeat,TimeFromNow",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuremonitorlogs_2']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/visualizeQuery",
                                "queries":  {
                                    "resourcegroups":  "@parameters('ResourceGroupName')",
                                    "resourcename":  "@parameters('WorkspaceName')",
                                    "resourcetype":  "Log Analytics Workspace",
                                    "subscriptions":  "@parameters('SubscriptionID')",
                                    "timerange":  "Last 48 hours",
                                    "visType":  "Html Table"
                                }
                            }
                        },
                        "Initialize_variable_HeartbeatThreshold_in_minute":  {
                            "runAfter":  {
                                "Initialize_variable_LastLogRecivedThreshold__in_minute":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "HeartbeatThreshold",
                                        "type":  "string",
                                        "value":  "60"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_LastLogRecivedThreshold__in_minute":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "LastLogRecivedThreshold",
                                        "type":  "string",
                                        "value":  "80"
                                    }
                                ]
                            }
                        },
                        "Last_data_received,_by_table":  {
                            "runAfter":  {
                                "Initialize_variable_HeartbeatThreshold_in_minute":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "let LastLogRecivedThreshold = @{variables('LastLogRecivedThreshold')}m;\nunion withsource = _TableName *\n| where TimeGenerated \u003e ago(7d)\n| summarize LastLog = max(TimeGenerated) by _TableName\n| extend last_log_rec = now() - LastLog\n| where last_log_rec \u003e LastLogRecivedThreshold\n| extend ['Last Record Received'] = strcat(case(last_log_rec \u003c 2m, strcat(toint(last_log_rec / 1m), ' seconds'), last_log_rec \u003c 2h, strcat(toint(last_log_rec / 1m), ' minutes'), last_log_rec \u003c 2d, strcat(toint(last_log_rec / 1h), ' hours'), strcat(toint(last_log_rec / 1d), ' days')), ' ago')\n| order by last_log_rec  desc\n| project ['Table Name']=_TableName, ['Last Record Received'] ",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuremonitorlogs_2']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/visualizeQuery",
                                "queries":  {
                                    "resourcegroups":  "@parameters('ResourceGroupName')",
                                    "resourcename":  "@parameters('WorkspaceName')",
                                    "resourcetype":  "Log Analytics Workspace",
                                    "subscriptions":  "@parameters('SubscriptionID')",
                                    "timerange":  "Set in query",
                                    "visType":  "Html Table"
                                }
                            }
                        },
                        "Send_an_email_to_the_SOC_Team":  {
                            "runAfter":  {
                                "Heartbeat_Query":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "Body":  "\u003cp\u003e\u003cspan style=\"font-size: 14px\"\u003e\u003cstrong\u003eLast data received, by Table\u003cbr\u003e\n\u003c/strong\u003e\u003c/span\u003e\u003cbr\u003e\n@{base64ToString(body('Last_data_received,_by_table')?['body'])}\u003cbr\u003e\n\u003cbr\u003e\n\u003cspan style=\"color: rgb(147,101,184)\"\u003e\u003cstrong\u003eVirtual Machines without Heartbeat\u003c/strong\u003e\u003c/span\u003e\u003cspan style=\"color: rgb(26,188,156)\"\u003e\u003cstrong\u003e\u003cbr\u003e\n\u003cbr\u003e\n\u003c/strong\u003e\u003c/span\u003e\u003cspan style=\"color: rgb(26,188,156)\"\u003e\u003cstrong\u003e@{base64ToString(body('Heartbeat_Query')?['body'])}\u003c/strong\u003e\u003c/span\u003e\u003cspan style=\"color: rgb(26,188,156)\"\u003e\u003cstrong\u003e\u003c/strong\u003e\u003c/span\u003e\u003cbr\u003e\n\u003c/p\u003e",
                                    "Importance":  "High",
                                    "Subject":  "Last Log Recived by Table \u0026 Heartbeat Summary",
                                    "To":  "@parameters('MailList')"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['office365_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/v2/Mail"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuremonitorlogs_2":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                                "connectionName":  "[variables('AzuremonitorlogsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                            },
                            "office365_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName":  "[variables('Office365ConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "LogicAppsCategory":  "security",
                "hidden-SentinelTemplateName":  "LastLogRecived_Notification",
                "hidden-SentinelTemplateVersion":  "1.0"
            },            
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzuremonitorlogsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzuremonitorlogsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('Office365ConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('Office365ConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                }
            }
        }
    ]
}
